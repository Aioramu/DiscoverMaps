{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aioramu/Documents/DiscoverMaps/maps/src/Events.js\";\nimport React, { Component } from 'react';\nimport { YMaps, Map, GeoObject, Placemark, Polyline, Rectangle, Polygon, Circle, Clusterer, ObjectManager } from 'react-yandex-maps';\n\nclass Events extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/usercase/api/events\").then(res => res.json()).then(result => {\n      //console.log(result.data)\n      this.setState({\n        isLoaded: true,\n        items: result.data\n      });\n    }, // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n    // чтобы не перехватывать исключения из ошибок в самих компонентах.\n    error => {\n      //console.log(this.state.items);\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state; //console.log('wtf',this.state.items)\n\n    var coord = items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"entry\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://127.0.0.1:8000/usercase/login/\",\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://127.0.0.1:8000/usercase/registration\",\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(YMaps, {\n        children: [console.log(coord), /*#__PURE__*/_jsxDEV(Map, {\n          defaultState: {\n            center: [55.751574, 37.573856],\n            zoom: 10\n          },\n          width: 1500,\n          height: 800,\n          children: /*#__PURE__*/_jsxDEV(ObjectManager, {\n            options: {\n              clusterDisableClickZoom: true,\n              clusterize: true,\n              gridSize: 32\n            },\n            objects: {\n              clusterDisableClickZoom: true,\n              openBalloonOnClick: true,\n              preset: 'islands#greenDotIcon'\n            },\n            clusters: {\n              clusterDisableClickZoom: true,\n              preset: 'islands#redClusterIcons'\n            },\n            filter: object => object.id % 2 === 0 //defaultFeatures={this.state.items}\n            ,\n            defaultFeatures: coord['features'],\n            modules: ['objectManager.addon.clustersBalloon', 'objectManager.addon.clustersHint', 'objectManager.addon.objectsBalloon', 'objectManager.addon.objectsHint']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Events;","map":{"version":3,"sources":["/home/aioramu/Documents/DiscoverMaps/maps/src/Events.js"],"names":["React","Component","YMaps","Map","GeoObject","Placemark","Polyline","Rectangle","Polygon","Circle","Clusterer","ObjectManager","Events","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","data","render","coord","console","log","center","zoom","clusterDisableClickZoom","clusterize","gridSize","openBalloonOnClick","preset","object","id"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport { YMaps, Map,GeoObject, Placemark, Polyline, Rectangle, Polygon, Circle, Clusterer, ObjectManager } from 'react-yandex-maps';\n\nclass Events extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/usercase/api/events\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          //console.log(result.data)\n          this.setState({\n            isLoaded: true,\n            items: result.data\n          });\n        },\n\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\n        (error) => {\n          //console.log(this.state.items);\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\nrender() {\n  const { error, isLoaded, items } = this.state;\n  //console.log('wtf',this.state.items)\n\n  var coord=items\n\n  return(\n\n\n  <div class=\"map\">\n  <div id=\"entry\">\n    <center>\n    <a href=\"http://127.0.0.1:8000/usercase/login/\">Войти </a>\n    <a href=\"http://127.0.0.1:8000/usercase/registration\">Зарегестрироваться</a>\n    </center>\n  </div>\n  <YMaps >\n  {console.log(coord)}\n  <Map\n    defaultState={{\n      center: [55.751574, 37.573856],\n      zoom: 10,\n    }}\n    width={1500} height={800}>\n    <ObjectManager\n      options={{\n        clusterDisableClickZoom: true,\n        clusterize: true,\n        gridSize: 32,\n\n      }}\n      objects={{\n        clusterDisableClickZoom: true,\n        openBalloonOnClick: true,\n        preset: 'islands#greenDotIcon',\n      }}\n      clusters={{\n        clusterDisableClickZoom: true,\n        preset: 'islands#redClusterIcons',\n      }}\n      filter={object => object.id % 2 === 0}\n\n      //defaultFeatures={this.state.items}\n\n      defaultFeatures={coord['features']}\n      modules={[\n        'objectManager.addon.clustersBalloon',\n        'objectManager.addon.clustersHint',\n        'objectManager.addon.objectsBalloon',\n        'objectManager.addon.objectsHint',\n      ]}\n    />\n  </Map>\n</YMaps>\n</div>\n);\n\n}\n}\nexport default Events;\n"]},"metadata":{},"sourceType":"module"}